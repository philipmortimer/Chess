/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package philipm.cs5.software.development.user.system;

import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import javax.swing.JOptionPane;
/**
 * Creates a form that allows the user to create an account.
 * @author mortimer
 */
public class CreateAccount extends javax.swing.JFrame {
    private boolean viewPass=false;//variable that stores whether the password is visible or masked
    private boolean viewConfirmPass=false;//variable that stores whether the confirm password field is visible or masked
    private final char DEFAULT_ECHO_CHAR;//stores the character used to mask the password
    private final Component[]COMPS;//array used to determine focus traversal policy
    private int currentCompIndex=0;//stores the index used to focus the components
    /**
     * Creates new form CreateAccount
     */
    public CreateAccount() {
        initComponents();
        //array that stores which order components should be focused
        Component[]compsBuff={usernameTxt,emailAddressTxt,passwordField,confirmPasswordField,firstNameTxt,surnameTxt,postcodeTxt,addressLineOneTxt,addressLineTwoTxt,addressLineThreeTxt,addressLineFourTxt,discordUsernameTxt,discordNumberTxt,dateOfBirthTxt,phoneNumberTxt,createAccountBtn,clearBtn,logInBtn};
        COMPS=compsBuff;
        DEFAULT_ECHO_CHAR=passwordField.getEchoChar();
        //sets the focus traversal policy. Essentially, the traversal policy is that the focus is assigned to each element of the COMPS array in the order they are in the array.
        this.setFocusTraversalPolicy(new FocusTraversalPolicy() {
            /**
             * Gets the component to focus next.
             * @param aContainer The current container
             * @param aComponent The current component
             * @return The component to focus next.
             */
            @Override
            public Component getComponentAfter(Container aContainer, Component aComponent) {
                currentCompIndex++;
                if(currentCompIndex>COMPS.length-1){//loops the array back to element 0 if the index exceeds the curent value.
                    currentCompIndex=0;
                }
                return COMPS[currentCompIndex];//returns the component
            }
            /**
             * Gets the component before the focused component in the focus traversal policy.
             * @param aContainer The current container
             * @param aComponent The current component
             * @return The component before the focused component in the focus traversal policy
             */
            @Override
            public Component getComponentBefore(Container aContainer, Component aComponent) {
                currentCompIndex--;
                if(currentCompIndex<0){//wraps the array so that it goes to the end
                    currentCompIndex=COMPS.length-1;
                }
                return COMPS[currentCompIndex];
            }
            /**
             * Gets the first component in the focus policy
             * @param aContainer The container
             * @return The first component to focus
             */
            @Override
            public Component getFirstComponent(Container aContainer) {
                return COMPS[0];
            }
            /**
             * Gets the last component in the focus traversal policy
             * @param aContainer The container
             * @return The last component in the focus traversal policy
             */
            @Override
            public Component getLastComponent(Container aContainer) {
                return COMPS[COMPS.length-1];
            }
            /**
             * Gets the default component
             * @param aContainer The container
             * @return The default component
             */
            @Override
            public Component getDefaultComponent(Container aContainer) {
                return COMPS[0];
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        emailAddressTxt = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        confirmPasswordField = new javax.swing.JPasswordField();
        firstNameTxt = new javax.swing.JTextField();
        surnameTxt = new javax.swing.JTextField();
        postcodeTxt = new javax.swing.JTextField();
        addressLineOneTxt = new javax.swing.JTextField();
        addressLineTwoTxt = new javax.swing.JTextField();
        addressLineThreeTxt = new javax.swing.JTextField();
        addressLineFourTxt = new javax.swing.JTextField();
        discordUsernameTxt = new javax.swing.JTextField();
        discordNumberTxt = new javax.swing.JTextField();
        dateOfBirthTxt = new javax.swing.JTextField();
        phoneNumberTxt = new javax.swing.JTextField();
        logInBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        createAccountBtn = new javax.swing.JButton();
        passwordLabel = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        surnameLabel = new javax.swing.JLabel();
        postcodeLabel = new javax.swing.JLabel();
        addressOneLabel = new javax.swing.JLabel();
        addressTwoLabel = new javax.swing.JLabel();
        addressThreeLabel = new javax.swing.JLabel();
        addressFourLabel = new javax.swing.JLabel();
        discordUsernameLabel = new javax.swing.JLabel();
        discordNumberLabel = new javax.swing.JLabel();
        dateOfBirthLabel = new javax.swing.JLabel();
        phoneNumberLabel = new javax.swing.JLabel();
        viewPassBtn = new javax.swing.JButton();
        viewConfirmBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Create Account");

        jLabel1.setText("Username");

        jLabel2.setText("Email Address");

        jLabel3.setText("Password");

        jLabel4.setText("Confirm Password");

        jLabel5.setText("First Name");

        jLabel6.setText("Surname");

        jLabel7.setText("Postcode");

        jLabel8.setText("Address Line 1");

        jLabel9.setText("Address Line 2");

        jLabel10.setText("Address Line 3");

        jLabel11.setText("Address Line 4");

        jLabel12.setText("Discord Username");

        jLabel13.setText("Discord Number");

        jLabel14.setText("Date of Birth");

        jLabel15.setText("Phone Number");

        jLabel16.setForeground(new java.awt.Color(255, 0, 51));
        jLabel16.setText("*");

        jLabel17.setForeground(new java.awt.Color(255, 0, 51));
        jLabel17.setText("*");

        jLabel18.setForeground(new java.awt.Color(255, 0, 51));
        jLabel18.setText("*");

        jLabel19.setForeground(new java.awt.Color(255, 0, 51));
        jLabel19.setText("*");

        usernameTxt.setFocusCycleRoot(true);
        usernameTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTxtFocusLost(evt);
            }
        });
        usernameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernameTxtKeyTyped(evt);
            }
        });

        emailAddressTxt.setFocusCycleRoot(true);
        emailAddressTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailAddressTxtFocusLost(evt);
            }
        });

        passwordField.setFocusCycleRoot(true);

        confirmPasswordField.setFocusCycleRoot(true);

        firstNameTxt.setFocusCycleRoot(true);

        dateOfBirthTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateOfBirthTxtActionPerformed(evt);
            }
        });

        logInBtn.setText("Back to Log In");
        logInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear Form");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        createAccountBtn.setText("Create Account");
        createAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountBtnActionPerformed(evt);
            }
        });

        passwordLabel.setForeground(new java.awt.Color(255, 51, 51));

        confirmPasswordLabel.setForeground(new java.awt.Color(255, 51, 51));

        firstNameLabel.setForeground(new java.awt.Color(255, 51, 51));

        surnameLabel.setForeground(new java.awt.Color(255, 51, 51));

        postcodeLabel.setForeground(new java.awt.Color(255, 51, 51));

        addressOneLabel.setForeground(new java.awt.Color(255, 51, 51));

        addressTwoLabel.setForeground(new java.awt.Color(255, 51, 51));

        addressThreeLabel.setForeground(new java.awt.Color(255, 51, 51));

        addressFourLabel.setForeground(new java.awt.Color(255, 51, 51));

        discordUsernameLabel.setForeground(new java.awt.Color(255, 51, 51));

        discordNumberLabel.setForeground(new java.awt.Color(255, 51, 51));

        dateOfBirthLabel.setForeground(new java.awt.Color(255, 51, 51));

        phoneNumberLabel.setForeground(new java.awt.Color(255, 51, 51));

        viewPassBtn.setText("View");
        viewPassBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPassBtnActionPerformed(evt);
            }
        });

        viewConfirmBtn.setText("View");
        viewConfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewConfirmBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(133, 133, 133)
                                .addComponent(postcodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel19))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(surnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel16)
                                        .addGap(107, 107, 107)
                                        .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel17))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel18)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(emailAddressTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                                            .addComponent(passwordField)
                                            .addComponent(confirmPasswordField)))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(logInBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearBtn)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(surnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(postcodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewConfirmBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewPassBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(confirmPasswordLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addressLineTwoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addressLineOneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(discordNumberTxt)
                                    .addComponent(discordUsernameTxt)
                                    .addComponent(addressLineFourTxt)
                                    .addComponent(addressLineThreeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phoneNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateOfBirthTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressOneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressTwoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressThreeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressFourLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discordUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discordNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateOfBirthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(createAccountBtn))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(addressOneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addressTwoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addressThreeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addressFourLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(discordUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel16)
                                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel17)
                                    .addComponent(emailAddressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel18)
                                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(viewPassBtn))
                                    .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel19)
                                        .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(viewConfirmBtn))
                                    .addComponent(confirmPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(surnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(surnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(postcodeTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(discordNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(postcodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addComponent(dateOfBirthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(phoneNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(addressLineOneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(addressLineTwoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(addressLineThreeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(addressLineFourTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(discordUsernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(discordNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(dateOfBirthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(phoneNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logInBtn)
                    .addComponent(clearBtn)
                    .addComponent(createAccountBtn))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateOfBirthTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateOfBirthTxtActionPerformed

    }//GEN-LAST:event_dateOfBirthTxtActionPerformed
    private void clearForm(){
        //sets all fields to empty 
        usernameTxt.setText("");emailAddressTxt.setText("");passwordField.setText("");confirmPasswordField.setText("");firstNameTxt.setText("");
        surnameTxt.setText("");postcodeTxt.setText("");addressLineOneTxt.setText("");addressLineTwoTxt.setText("");addressLineThreeTxt.setText("");
        addressLineFourTxt.setText("");discordNumberTxt.setText("");discordUsernameTxt.setText("");dateOfBirthTxt.setText("");phoneNumberTxt.setText("");
    }
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        //sets all fields to empty 
        clearForm();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void logInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInBtnActionPerformed
        //goes back to the log in form
        LogIn log = new LogIn();
        log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logInBtnActionPerformed
    /**
     * Attempts to create an account after performing validation on the appropriate fields
     * @param evt The button being pressed
     */
    private void createAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountBtnActionPerformed
        //validates the account details to ensure they are valid. Once they have been validated, the account is created
        //presence check
        if(!(Validation.isPresent(usernameTxt.getText())&& Validation.isPresent(emailAddressTxt.getText())&& Validation.isPresent(new String(passwordField.getPassword()))&&Validation.isPresent(new String(confirmPasswordField.getPassword())))){
            JOptionPane.showMessageDialog(this, "Username, email address, password and confirm password must not be left blank.","Invalid input",JOptionPane.OK_OPTION);
            return;
        }
        if(Validation.containsIllegalStrings(usernameTxt.getText()+emailAddressTxt.getText()+new String(passwordField.getPassword())+new String(confirmPasswordField.getPassword())+firstNameTxt.getText()+surnameTxt.getText()+postcodeTxt.getText()+addressLineOneTxt.getText()
                +addressLineTwoTxt.getText()+addressLineThreeTxt.getText()+addressLineFourTxt.getText()+discordNumberTxt.getText()+discordUsernameTxt.getText()+dateOfBirthTxt.getText()+phoneNumberTxt.getText())){//performs a look up check to see whether any field contains an illegal character
            JOptionPane.showMessageDialog(this, "One or more fields contain an illegal character sequence. Here is a list of illegal caharacter sequences: "+Validation.getListOfIllegalStrings(),"Invalid Input",JOptionPane.OK_OPTION);
            return;
        }
        //check username inputs
        if(!Validation.isAppropriateLength(15, usernameTxt.getText())){//checks to see if username is 15 charcters or less - length check
            JOptionPane.showMessageDialog(this, "The username can not exceed 15 characters in length","Invalid Input",JOptionPane.OK_OPTION);
            return;
        }
        if(usernameTxt.getText().contains("@") || usernameTxt.getText().contains(" ")){//format check
            JOptionPane.showMessageDialog(this, "The username can not contain the @ symbol OR a space.","Invalid Input",JOptionPane.OK_OPTION);
            return;
        }
        //checks email address
        if(!emailAddressTxt.getText().contains("@") || emailAddressTxt.getText().contains(" ")){
            JOptionPane.showMessageDialog(this, "The email address must contain the @ symbol and no spaces.","Invalid Input",JOptionPane.OK_OPTION);
            return;            
        }
        //length check
        if(!Validation.isAppropriateLength(39, emailAddressTxt.getText())){//email address must not be longer than 39 characters
            JOptionPane.showMessageDialog(this, "The email address must not be longer than 39 characters.","Invalid Input",JOptionPane.OK_OPTION);
            return;               
        }
        if(!new String(passwordField.getPassword()).equals(new String (confirmPasswordField.getPassword()))){//checks that both passwords match - double entry verification validation
            JOptionPane.showMessageDialog(this, "The two passwords do not match.","Invalid Input",JOptionPane.OK_OPTION);
            return;                   
        }
        if(new String(passwordField.getPassword()).length()<5 || new String(passwordField.getPassword()).length()>20){//length check
            JOptionPane.showMessageDialog(this, "The password must be between 5-20 characters in length (inclusive).","Invalid Input",JOptionPane.OK_OPTION);
            return;                     
        }
        if(Validation.isPresent(firstNameTxt.getText())){//only performs validation if first name is not empty
            if(!Validation.isAppropriateLength(35, firstNameTxt.getText())){//length check - first name can't be more than 35 characters
                JOptionPane.showMessageDialog(this, "The first name can not be longer than 35 characters","Invalid Input",JOptionPane.OK_OPTION);
                return;                     
            }
            if(!Validation.consistsOnlyOfLetters(firstNameTxt.getText())){
                JOptionPane.showMessageDialog(this, "The first name can only contain characters that are in the english alphabet","Invalid Input",JOptionPane.OK_OPTION);
                return;                  
            }
        }
        if(Validation.isPresent(surnameTxt.getText())){//only performs validation if  surname is not empty
            if(!Validation.isAppropriateLength(40, surnameTxt.getText())){//length check - surname can't be more than 40 characters
                JOptionPane.showMessageDialog(this, "The surname can not be longer than 40 characters","Invalid Input",JOptionPane.OK_OPTION);
                return;                     
            }
            if(!Validation.consistsOnlyOfLetters(surnameTxt.getText())){
                JOptionPane.showMessageDialog(this, "The surname can only contain characters that are in the english alphabet","Invalid Input",JOptionPane.OK_OPTION);
                return;                  
            }
        }
        if(Validation.isPresent(postcodeTxt.getText())){//only performs validation is postcode is not left empty
            if(!Validation.isValidPostcode(postcodeTxt.getText())){
                JOptionPane.showMessageDialog(this, "The postcode must be between 6-8 characters long, contain exactly one space and have all non-space characters capitalised","Invalid Input",JOptionPane.OK_OPTION);
                return;      
            }
        }
        if(!Validation.isAppropriateLength(40, addressLineOneTxt.getText())){//length check
            JOptionPane.showMessageDialog(this, "Each address line can not be longer than 40 characters","Invalid Input",JOptionPane.OK_OPTION);
            return;              
        }
        if(!Validation.isAppropriateLength(40, addressLineTwoTxt.getText())){//length check
            JOptionPane.showMessageDialog(this, "Each address line can not be longer than 40 characters","Invalid Input",JOptionPane.OK_OPTION);
            return;              
        }
        if(!Validation.isAppropriateLength(40, addressLineThreeTxt.getText())){//length check
            JOptionPane.showMessageDialog(this, "Each address line can not be longer than 40 characters","Invalid Input",JOptionPane.OK_OPTION);
            return;              
        }
        if(!Validation.isAppropriateLength(40, addressLineFourTxt.getText())){//length check
            JOptionPane.showMessageDialog(this, "Each address line can not be longer than 40 characters","Invalid Input",JOptionPane.OK_OPTION);
            return;              
        }
        if(!Validation.isAppropriateLength(32, discordUsernameTxt.getText())){
            JOptionPane.showMessageDialog(this, "The Discord username can not be longer than 32 characters","Invalid Input",JOptionPane.OK_OPTION);
            return;              
        }
        if(Validation.isPresent(discordNumberTxt.getText())){
            if(!Validation.isInteger(discordNumberTxt.getText())){
                JOptionPane.showMessageDialog(this, "The Discord number must be an integer","Invalid Input",JOptionPane.OK_OPTION);
                return;            
            }
            if(!Validation.isAppropriateLength(4, discordNumberTxt.getText())){
                JOptionPane.showMessageDialog(this, "The Discord number must be no more than 4 characters","Invalid Input",JOptionPane.OK_OPTION);
                return;                       
            }
            if(!Validation.rangeCheck(0, 9999, Integer.parseInt(discordNumberTxt.getText()))){//range check
                JOptionPane.showMessageDialog(this, "The Discord number must be between 0000-9999","Invalid Input",JOptionPane.OK_OPTION);
                return;                   
            }
        }
        if(Validation.isPresent(dateOfBirthTxt.getText())){
            if(!Validation.formatCheckDateOfBirth(dateOfBirthTxt.getText())){
                JOptionPane.showMessageDialog(this, "The date of birth must be a valid date of birth in the form dd/mm/yyyy","Invalid Input",JOptionPane.OK_OPTION);
                return;   
            }
        }
        if(Validation.isPresent(phoneNumberTxt.getText())){
            if(!Validation.isAppropriateLength(20, phoneNumberTxt.getText())){
                JOptionPane.showMessageDialog(this, "Phone number can not be longer than 20 characters.","Invalid Input",JOptionPane.OK_OPTION);
                return;                   
            }
            if(!Validation.onlyContainsPhoneNumberCharacters(phoneNumberTxt.getText())){
                JOptionPane.showMessageDialog(this, "Phone number can only contain plusses, spaces and integers.","Invalid Input",JOptionPane.OK_OPTION);
                return;                     
            }
        }
        //lookup check to ensure that both email address and username are not already taken
        try{
            if(ThreadClient.isUserNameAlreadyTaken(usernameTxt.getText())){
                JOptionPane.showMessageDialog(this, "The username is already taken. Plesae try a different username.","Invalid Input",JOptionPane.OK_OPTION);
                return;
            }
            if(ThreadClient.isEmailAddressAlreadyTaken(emailAddressTxt.getText())){
                JOptionPane.showMessageDialog(this, "The email is already taken. Plesae try a different email address.","Invalid Input",JOptionPane.OK_OPTION);                
                return;
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "An error occured: "+e.getMessage()+". This is almost certainly becuase something is wrong with your internet connection or the server.","Network Error",JOptionPane.OK_OPTION);
            return;
        }
        try{
            //creates the account once the validation has been performed
            ThreadClient.createAccount(new String[]{usernameTxt.getText(),new String(passwordField.getPassword()),firstNameTxt.getText(),surnameTxt.getText(),postcodeTxt.getText(),addressLineOneTxt.getText(),addressLineTwoTxt.getText(),addressLineThreeTxt.getText(),addressLineFourTxt.getText(),discordUsernameTxt.getText(),discordNumberTxt.getText(),dateOfBirthTxt.getText(),phoneNumberTxt.getText(),"false","false","1000","false"},emailAddressTxt.getText());
            JOptionPane.showMessageDialog(this,"Account succesfully created.","Success", JOptionPane.OK_OPTION);
            LogIn log = new LogIn();//takes the user to the log in screen once the account has been made
            log.setVisible(true);this.dispose();
            return;
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "An error occured: "+e.getMessage()+". This is almost certainly becuase something is wrong with your internet connection or the server.","Network Error",JOptionPane.OK_OPTION);
            return;
        }
    }//GEN-LAST:event_createAccountBtnActionPerformed

    private void usernameTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTxtKeyTyped
        
    }//GEN-LAST:event_usernameTxtKeyTyped

    private void usernameTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTxtFocusLost

    }//GEN-LAST:event_usernameTxtFocusLost

    private void emailAddressTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailAddressTxtFocusLost

    }//GEN-LAST:event_emailAddressTxtFocusLost

    private void viewPassBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPassBtnActionPerformed
        //allows the user to mask or unmask the password
        viewPass=!viewPass;
        if(viewPass==true){
            char c =0;
            passwordField.setEchoChar(c);
            viewPassBtn.setText("Hide");
        }else{
            passwordField.setEchoChar(DEFAULT_ECHO_CHAR);
            viewPassBtn.setText("View");
        }
    }//GEN-LAST:event_viewPassBtnActionPerformed

    private void viewConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewConfirmBtnActionPerformed
        //allows the user to mask or unmask the password
        viewConfirmPass=!viewConfirmPass;
        if(viewConfirmPass==true){
            char c =0;
            confirmPasswordField.setEchoChar(c);
            viewConfirmBtn.setText("Hide");
        }else{
            confirmPasswordField.setEchoChar(DEFAULT_ECHO_CHAR);
            viewConfirmBtn.setText("View");
        }
    }//GEN-LAST:event_viewConfirmBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressFourLabel;
    private javax.swing.JTextField addressLineFourTxt;
    private javax.swing.JTextField addressLineOneTxt;
    private javax.swing.JTextField addressLineThreeTxt;
    private javax.swing.JTextField addressLineTwoTxt;
    private javax.swing.JLabel addressOneLabel;
    private javax.swing.JLabel addressThreeLabel;
    private javax.swing.JLabel addressTwoLabel;
    private javax.swing.JButton clearBtn;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JButton createAccountBtn;
    private javax.swing.JLabel dateOfBirthLabel;
    private javax.swing.JTextField dateOfBirthTxt;
    private javax.swing.JLabel discordNumberLabel;
    private javax.swing.JTextField discordNumberTxt;
    private javax.swing.JLabel discordUsernameLabel;
    private javax.swing.JTextField discordUsernameTxt;
    private javax.swing.JTextField emailAddressTxt;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logInBtn;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JTextField phoneNumberTxt;
    private javax.swing.JLabel postcodeLabel;
    private javax.swing.JTextField postcodeTxt;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JTextField surnameTxt;
    private javax.swing.JTextField usernameTxt;
    private javax.swing.JButton viewConfirmBtn;
    private javax.swing.JButton viewPassBtn;
    // End of variables declaration//GEN-END:variables
}
