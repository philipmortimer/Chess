/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package philipm.cs5.software.development.server.system;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 * This class loads a form used to change the port number of the server if appropriate
 * @author mortimer
 */

public class ChangeServerDetails extends javax.swing.JFrame {
    public static final String SERVER_SETTINGS_TEXT_FILE_NAME="serverSettings.txt";// stores the name of the text file that stores the server settings
    private boolean isPortNoBeingEdited=false;//stores state of form (i.e. whether the port number is being edited).
    private static final int DEFAULT_PORT_NO=80;//stores the default port number setting
    /**
     * Creates new form ChangeServerDetails
     */
    public ChangeServerDetails() {
        initComponents();
        setComponentsBasedOnIsBeingEdited();
        loadDetailsFromFileOntoForm();
    }
    /**
     * Determines whether various components are visible and enabled depending on whether editing is currently happening.
     */
    private void setComponentsBasedOnIsBeingEdited(){
        setToDefaultBtn.setEnabled(isPortNoBeingEdited);setToDefaultBtn.setVisible(isPortNoBeingEdited);
        cancelChangesBtn.setEnabled(isPortNoBeingEdited);cancelChangesBtn.setVisible(isPortNoBeingEdited);
        saveDetailsBtn.setEnabled(isPortNoBeingEdited);saveDetailsBtn.setVisible(isPortNoBeingEdited);
        editBtn.setEnabled(!isPortNoBeingEdited);editBtn.setVisible(!isPortNoBeingEdited);
        portNumberTxt.setEditable(isPortNoBeingEdited);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        portNumberTxt = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        cancelChangesBtn = new javax.swing.JButton();
        saveDetailsBtn = new javax.swing.JButton();
        setToDefaultBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server Settings");

        jLabel1.setText("Port Number");

        portNumberTxt.setEditable(false);

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        cancelChangesBtn.setText("Cancel Changes");
        cancelChangesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelChangesBtnActionPerformed(evt);
            }
        });

        saveDetailsBtn.setText("Save Details");
        saveDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDetailsBtnActionPerformed(evt);
            }
        });

        setToDefaultBtn.setText("Set to Default Value");
        setToDefaultBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setToDefaultBtnActionPerformed(evt);
            }
        });

        editBtn.setText("Edit Port Number");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(portNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(backBtn)
                .addGap(106, 106, 106)
                .addComponent(cancelChangesBtn)
                .addGap(27, 27, 27)
                .addComponent(saveDetailsBtn)
                .addGap(42, 42, 42)
                .addComponent(editBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(setToDefaultBtn)
                .addGap(58, 58, 58))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(portNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 316, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(cancelChangesBtn)
                    .addComponent(saveDetailsBtn)
                    .addComponent(setToDefaultBtn)
                    .addComponent(editBtn))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Updates buttons based on whether the user is currently editing the port number
 * @param evt the edit button being clicked
 */
    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        isPortNoBeingEdited=!isPortNoBeingEdited;
        setComponentsBasedOnIsBeingEdited();
    }//GEN-LAST:event_editBtnActionPerformed
    /**
     * Gets the port number inputted and if it is an integer greater than or equal to 1, it is stored in the correct file and the form is updated.
     * @param evt The save details button being pressed by the user
     */
    private void saveDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDetailsBtnActionPerformed
        try{
            int portNum = Integer.parseInt(portNumberTxt.getText());
            if(portNum<=0){//range check
                JOptionPane.showMessageDialog(this, "The port number must be an integer that is greater than 0.","Invalid Input",JOptionPane.OK_OPTION);
                return;
            }
            setPortNumberTextFile(portNum);
            isPortNoBeingEdited=!isPortNoBeingEdited;
            setComponentsBasedOnIsBeingEdited();loadDetailsFromFileOntoForm();
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "The port number must be an integer that is greater than 0.","Invalid Input",JOptionPane.OK_OPTION);
            return;
        }
    }//GEN-LAST:event_saveDetailsBtnActionPerformed
    /**
     * Sets the port number back to its default value. This default value is stored under the constant titled DEFUALT_PORT_NO
     * @param evt the button being pressed by the user
     */
    private void setToDefaultBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setToDefaultBtnActionPerformed
        setPortNumberTextFile(DEFAULT_PORT_NO);
        isPortNoBeingEdited=!isPortNoBeingEdited;
        setComponentsBasedOnIsBeingEdited();loadDetailsFromFileOntoForm();
    }//GEN-LAST:event_setToDefaultBtnActionPerformed
    /**
     * Cancels changes and reverts the port number text field to the value stored in the text file.
     * @param evt the button being pressed
     */
    private void cancelChangesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelChangesBtnActionPerformed
        isPortNoBeingEdited=!isPortNoBeingEdited;
        setComponentsBasedOnIsBeingEdited();loadDetailsFromFileOntoForm();
    }//GEN-LAST:event_cancelChangesBtnActionPerformed
    /**
     * Takes the user to the ServerUI form after appropriate confirmation
     * @param evt The back button is pressed by the user
     */
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        if(isPortNoBeingEdited){
            int confirm = JOptionPane.showConfirmDialog(this, "If you continue, any unsaved changes to the port number will not be saved. Would you like to continue?","Continue?",JOptionPane.YES_NO_CANCEL_OPTION);
            if(confirm==JOptionPane.YES_OPTION){
                ServerUI serv = new ServerUI();
                serv.setVisible(true);
                this.dispose();
            }   
            return;
        }else{
            ServerUI serv = new ServerUI();
            serv.setVisible(true);
            this.dispose();            
        }

    }//GEN-LAST:event_backBtnActionPerformed
    /*
    Loads details stored in the server settings text file and displays them on the form
    */
    private void loadDetailsFromFileOntoForm(){
        try{
            FileReader read = new FileReader(SERVER_SETTINGS_TEXT_FILE_NAME);
            BufferedReader buffRead = new BufferedReader(read);
            portNumberTxt.setText(buffRead.readLine());read.close();buffRead.close();
        }catch(IOException e){
            JOptionPane.showMessageDialog(this, "An error occured when reading from file: "+SERVER_SETTINGS_TEXT_FILE_NAME+". Error details "+e, "Error", JOptionPane.OK_OPTION);
        }
    }
    /**
     * Stores the new port number in the correct text file
     * @param portNumber the new port number
     */
    private void setPortNumberTextFile(int portNumber){
        try{
            FileWriter write = new FileWriter(SERVER_SETTINGS_TEXT_FILE_NAME,false);
            BufferedWriter buffWrite = new BufferedWriter(write);
            buffWrite.write(String.valueOf(portNumber));
            buffWrite.flush();write.flush();
            buffWrite.close();write.close();
        }catch(IOException e){
            JOptionPane.showMessageDialog(this, "An error occured when writing to file: "+SERVER_SETTINGS_TEXT_FILE_NAME+". Error details "+e, "Error", JOptionPane.OK_OPTION);           
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangeServerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangeServerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangeServerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangeServerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangeServerDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton cancelChangesBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField portNumberTxt;
    private javax.swing.JButton saveDetailsBtn;
    private javax.swing.JButton setToDefaultBtn;
    // End of variables declaration//GEN-END:variables
}
